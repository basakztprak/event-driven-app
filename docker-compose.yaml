services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
    ports:
      - "9092:9092"

  mongo:
    image: bitnami/mongodb:latest
    container_name: mongo
    environment:
      - MONGODB_ROOT_USER=yourusername
      - MONGODB_ROOT_PASSWORD=yourpassword
      - MONGODB_DATABASE=yourdatabase
    ports:
      - "27017:27017"

  producer:
    build: ./producer
    container_name: producer
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKER=kafka:9092  
      - KAFKA_TOPIC=events        
    ports:
      - "3001:3000"
    restart: always

  consumer:
    build: ./consumer
    container_name: consumer
    depends_on:
      - kafka
      - mongo
    environment:
      - KAFKA_BROKER=kafka:9092 
      - KAFKA_TOPIC=events
      - MONGODB_URI=mongodb://yourusername:yourpassword@mongo:27017/yourdatabase?authSource=admin
    ports:
      - "3002:3000"
    restart: always

  api:
    build: ./api
    container_name: api
    depends_on:
      - mongo
    environment:
      - MONGODB_URI=mongodb://yourusername:yourpassword@mongo:27017/yourdatabase?authSource=admin
    ports:
      - "3000:3000"
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
